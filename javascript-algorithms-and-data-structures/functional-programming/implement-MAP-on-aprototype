/**
 * @Ques: Write your own Array.prototype.myMap(), which should behave exactly like Array.
 * prototype.map(). You should not use the built-in map method. The Array instance can be
 * accessed in the myMap method using this.
 */

const s = [23, 65, 98, 5];

//looping with a callback
Array.prototype.myMap = function(callback) {
  const arr = [];
  this.forEach((value) => arr.push(callback(value)))
  return arr;
}
//Output : [46, 130, 196, 10]
const new_s = s.myMap((item)=> item * 2)



/** @Using Recursion */
 Array.prototype.myMap = function(callback, arr= [], c=0) {
  return this.length === arr.length 
          ? arr 
          : this.myMap(callback, [...arr , callback(this[c])], ++c);
 }
 
 //Output : [46, 130, 196, 10]
